/*
题目描述
读入正整数 n,m, 输出∑(i从1到m)(floor(n/i))

输入格式
一行两个正整数 n,m, 1≤m≤n≤10^12

输出格式
一个整数表示答案.

样例
样例输入 1
4 3
样例输出 1
7
*/

#include<iostream>
#include<iomanip>
#include<cmath>
using namespace std;
int main()          //规律:i这个数出现了floor(n/i)-floor(n/i+1)次
{
	double result = 0.0;
	long long m, n;
	cin >> n >> m;
	long long division = sqrt(n);
	if (m <= division)
		for (long long i = 1; i <= m; i++) result += n / i; //如果m小于等于sqrt(n),不用技巧，直接累和
	else //如果m大于division，分为两部分计算m=n时的累和，再扣除多加的数
	{
		long long * temp = new long long[division + 5];
		for (long long i = 1; i <= division + 1; i++)
		{
			temp[i] = n / i;
			if (temp[i]>division) result += temp[i];         //对于大于division的n/i，直接加在result上
		}
		long long * num = new long long[division + 5];
		for (int i = 1; i <= division; i++) num[i] = temp[i] - temp[i + 1]; //此即floor(n/i)-floor(n/i+1)，num[i]即为[i]这个数出现的次数
		for (int i = 1; i <= division; i++) result += i * num[i];      //对于小于等于division的n/i,通过出现次数的性质，用乘法计算累和
		long long superfluous = n - m;  //扣除多加的部分
		for (int i = 1; i <= division; i++)
		{
			if (superfluous>num[i])
			{
				result -= i * num[i];
				superfluous -= num[i];
			}
			else
			{
				result -= superfluous * i;
				break;
			}
		}
		delete[] temp;
		delete[] num;
	}
	cout << fixed << setprecision(0) << result;
}
